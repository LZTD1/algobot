// Code generated by MockGen. DO NOT EDIT.
// Source: tgbot/internal/service (interfaces: AIService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAIService is a mock of AIService interface.
type MockAIService struct {
	ctrl     *gomock.Controller
	recorder *MockAIServiceMockRecorder
}

// MockAIServiceMockRecorder is the mock recorder for MockAIService.
type MockAIServiceMockRecorder struct {
	mock *MockAIService
}

// NewMockAIService creates a new mock instance.
func NewMockAIService(ctrl *gomock.Controller) *MockAIService {
	mock := &MockAIService{ctrl: ctrl}
	mock.recorder = &MockAIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAIService) EXPECT() *MockAIServiceMockRecorder {
	return m.recorder
}

// ClearAllHistory mocks base method.
func (m *MockAIService) ClearAllHistory(arg0 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClearAllHistory", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ClearAllHistory indicates an expected call of ClearAllHistory.
func (mr *MockAIServiceMockRecorder) ClearAllHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearAllHistory", reflect.TypeOf((*MockAIService)(nil).ClearAllHistory), arg0)
}

// GetSuggestion mocks base method.
func (m *MockAIService) GetSuggestion(arg0 int64, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSuggestion", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSuggestion indicates an expected call of GetSuggestion.
func (mr *MockAIServiceMockRecorder) GetSuggestion(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSuggestion", reflect.TypeOf((*MockAIService)(nil).GetSuggestion), arg0, arg1)
}
