package text

import (
	"algobot/internal/domain/models"
	"algobot/internal/domain/telegram/keyboards"
	"algobot/internal/lib/fsm"
	"algobot/internal/lib/logger/sl"
	"gopkg.in/telebot.v4"
	"log/slog"
	"strings"
)

type AIInformer interface {
	GetAIInfo(traceID interface{}) (models.AIInfo, error)
}

type AIStater interface {
	SetState(uid int64, state fsm.State)
}

func NewAI(ai AIInformer, log *slog.Logger, stater AIStater) telebot.HandlerFunc {
	return func(ctx telebot.Context) error {
		const op = "text.NewAI"

		log = log.With(
			slog.String("op", op),
			slog.Any("trace_id", ctx.Get("trace_id")),
		)
		uid := ctx.Sender().ID

		info, err := ai.GetAIInfo(ctx.Get("trace_id"))
		if err != nil {
			log.Warn("error while GetAIInfo", sl.Err(err))
			return ctx.Send("–£–ø—Å, AI —Å–µ–π—á–∞—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
		}

		stater.SetState(uid, fsm.ChattingAI)
		return ctx.Send(GetAIMessage(info), keyboards.RejectKeyboard(), telebot.ModeMarkdown)
	}
}

func GetAIMessage(info models.AIInfo) string {
	sb := strings.Builder{}
	sb.WriteString("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∫–ª—é—á–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö:\n\n")
	sb.WriteString("***–¢–µ–∫—Å—Ç:*** ")
	sb.WriteString(info.TextModel)
	sb.WriteString(" üóí\n***–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:*** ")
	sb.WriteString(info.ImageModel)
	sb.WriteString(" üñº\n\n")
	sb.WriteString("```guide\n")
	sb.WriteString("/reset - –æ—Ç—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å –º–æ–¥–µ–ª–∏")
	sb.WriteString("\n/image promt - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
	sb.WriteString("\n```")
	sb.WriteString("\n–î–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤ —á–∞—Ç")
	return sb.String()
}
